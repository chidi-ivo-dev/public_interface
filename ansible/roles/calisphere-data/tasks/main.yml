---
- name: include vaulted passwords from vaulted.yml
  include_vars: vaulted.yml
- name: upgrade all packages
  become: yes
  yum:
    name: '*'
    state: latest
- name: enable the extended epel repo (for redis)
  become: yes
  command: yum-config-manager --enable epel
- name: install needed packages
  become: yes
  yum: "pkg={{ item }} state=latest"
  with_items:
    - git
    - gcc
    - make
    - python27-pip
    - redis
    - monit
- name: start and run redis always
  become: yes
  service:
    name: redis
    state: started
    enabled: yes
- name: create the environment variable file
  template:
    src: env.local.j2
    dest: ~/env.local
- name: clone public interface
  git:
    repo: https://github.com/ucldc/public_interface.git
    dest: "{{ codedir }}"
    update: yes
    force: yes
- name: install public interface dependencies
  become: yes
  pip:
    requirements: /home/ec2-user/code/public_interface/requirements.txt
- name: get public ip for machine, need to add to ALLOWED_HOSTS in settings
  uri: 
    url: http://169.254.169.254/latest/meta-data/public-ipv4
    return_content: yes
  register: ip_public
- debug: var=ip_public
- name: put public IP in ALLOWED_HOSTS
  lineinfile:
    dest: "{{ codedir }}/public_interface/settings.py"
    regexp: 'ALLOWED_HOSTS = \['
    insertafter: yes
    line: "ALLOWED_HOSTS = [\n    '{{ ip_public.content }}',"
    state: present
- name: migrate db
  shell: . ~/env.local; python manage.py migrate --noinput
  args:
    chdir: "{{ codedir }}"
- name: load content
  shell: . ~/env.local; ./load-content.sh
  args:
    chdir: "{{ codedir }}"
- name: make the "dist" dir, needed by collectstatic
  file:
    path: "{{ codedir }}/dist"
    state: directory
- name: collect static files
  shell: . ~/env.local; python manage.py collectstatic --noinput
  args:
    chdir: "{{ codedir }}"
- name: set "site"
  shell: . ~/env.local; python manage.py loaddata fixtures/sites.json
  args:
    chdir: "{{ codedir }}"
- name: make sitemaps
  shell: . ~/env.local; python manage.py calisphere_refresh_sitemaps
  args:
    chdir: "{{ codedir }}"
- name:  install gunicorn
  pip:
    name: gunicorn
- name: configure monit
  file:
    src: run_gunicorn.monit
    dest: /etc/monit.d/run_gunicorn.monit

